{"ast":null,"code":"import React,{useState,useEffect}from'react';import{ethers}from'ethers';import{mintNFTDirect,startGasSession as startRealGasSession,getSessionStatus,getNFTBalance}from'./utils/erc4337';import'./App.css';// 硬编码的规则：持有特定 NFT 的地址\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ELIGIBLE_ADDRESSES=['0x742d35Cc6634C0532925a3b8D4C9db96C4b4d8b6',// 示例地址\n'0x1234567890123456789012345678901234567890'// 示例地址\n];// 移除了未使用的 DEMO_NFT_ADDRESS 常量\n// 任务配置\nconst TASKS=[{id:1,title:'关注 GasMorph 官方推特',description:'关注 @GasMorph 官方推特账号',type:'social',completed:false},{id:2,title:'加入 Discord 社区',description:'加入 GasMorph Discord 服务器',type:'social',completed:false},{id:3,title:'分享项目介绍',description:'在社交媒体分享 GasMorph 项目介绍',type:'social',completed:false}];function App(){const[isConnected,setIsConnected]=useState(false);const[userAddress,setUserAddress]=useState('');const[,setProvider]=useState(null);const[signer,setSigner]=useState(null);const[sessionActive,setSessionActive]=useState(false);const[sessionEndTime,setSessionEndTime]=useState(0);const[remainingTime,setRemainingTime]=useState('');const[mintCount,setMintCount]=useState(0);const[isMinting,setIsMinting]=useState(false);const[mintHistory,setMintHistory]=useState([]);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[showTaskModal,setShowTaskModal]=useState(false);const[tasks]=useState(TASKS);const[completedTasks,setCompletedTasks]=useState([]);const[isEligible,setIsEligible]=useState(false);const[nftBalance,setNftBalance]=useState(0);// 检查用户是否有资格享受 Gas 补贴（基于 NFT 持有）\nconst checkEligibility=async address=>{try{const nftBalance=await getNFTBalance(address);return nftBalance>0;// 持有 NFT 即有资格\n}catch(error){console.error('检查资格失败:',error);return ELIGIBLE_ADDRESSES.includes(address.toLowerCase());// 降级到硬编码检查\n}};// 检查任务完成状态\nconst checkTaskCompletion=()=>{return completedTasks.length>=2;// 至少完成2个任务\n};// 连接钱包\nconst handleConnect=async()=>{setError('');setSuccess('');if(typeof window!=='undefined'&&window.ethereum){try{console.log('正在连接钱包...');const accounts=await window.ethereum.request({method:'eth_requestAccounts'});if(accounts.length>0){const address=accounts[0];console.log('钱包地址:',address);const prov=new ethers.BrowserProvider(window.ethereum);const signerInstance=await prov.getSigner();// 检查网络\nconst network=await prov.getNetwork();console.log('当前网络 Chain ID:',network.chainId);// 将 BigInt 转换为 Number 进行比较\nconst chainId=Number(network.chainId);if(chainId!==1337){setError(\"\\u26A0\\uFE0F \\u8BF7\\u5207\\u6362\\u5230 Hardhat \\u672C\\u5730\\u7F51\\u7EDC (Chain ID: 1337)\\uFF0C\\u5F53\\u524D: \".concat(chainId));return;}setUserAddress(address);setProvider(prov);setSigner(signerInstance);setIsConnected(true);// 检查用户资格和 NFT 余额\ntry{const eligible=await checkEligibility(address);const balance=await getNFTBalance(address);setIsEligible(eligible);setNftBalance(balance);// 检查当前 Gas Session 状态\nconst sessionStatus=await getSessionStatus(address);if(sessionStatus.isActive){setSessionActive(true);setSessionEndTime(sessionStatus.expiryTime);}setSuccess(\"\\u2705 \\u94B1\\u5305\\u8FDE\\u63A5\\u6210\\u529F\\uFF01\".concat(eligible?' 您持有 NFT，享受 Gas 补贴资格！':''));}catch(error){console.error('检查用户状态失败:',error);setSuccess('钱包连接成功！');}console.log('钱包连接成功');}}catch(error){console.error('连接钱包失败:',error);if(error.code===4001){setError('用户拒绝了连接请求，请重新尝试连接钱包');}else if(error.code===-32002){setError('MetaMask 已经在处理连接请求，请检查 MetaMask 窗口');}else{setError(error.message||'连接钱包失败');}}}else{setError('请安装 MetaMask 钱包');}};// 断开连接\nconst handleDisconnect=()=>{setIsConnected(false);setUserAddress('');setProvider(null);setSigner(null);setSessionActive(false);setSessionEndTime(0);setRemainingTime('');setMintCount(0);setMintHistory([]);setError('');setSuccess('');setShowTaskModal(false);setCompletedTasks([]);setIsEligible(false);setNftBalance(0);};// 显示任务模态框\nconst showTasks=()=>{setShowTaskModal(true);};// 完成任务\nconst completeTask=taskId=>{if(!completedTasks.includes(taskId)){var _tasks$find;setCompletedTasks(prev=>[...prev,taskId]);setSuccess(\"\\u2705 \\u4EFB\\u52A1\\\"\".concat((_tasks$find=tasks.find(t=>t.id===taskId))===null||_tasks$find===void 0?void 0:_tasks$find.title,\"\\\"\\u5DF2\\u5B8C\\u6210\\uFF01\"));// 检查是否满足开启 Session 的条件\nif(completedTasks.length+1>=2){setSuccess('🎉 恭喜！您已完成足够任务，现在可以开启 Gas Session！');}}};// 开启 Gas Session\nconst startGasSession=async()=>{if(!signer||!userAddress){setError('请先连接钱包');return;}if(!checkTaskCompletion()){setError('请先完成至少2个任务才能开启 Gas Session');return;}setError('');setSuccess('');try{console.log('开启 Gas Session...');// 调用真实的合约函数\nconst result=await startRealGasSession(userAddress,120,signer);// 2分钟\nif(result&&result.hash){const endTime=Math.floor(Date.now()/1000)+120;setSessionActive(true);setSessionEndTime(endTime);setSuccess(\"\\u2705 Gas Session \\u5DF2\\u5F00\\u542F\\uFF01\\u60A8\\u73B0\\u5728\\u6709 2 \\u5206\\u949F\\u7684\\u514D\\u8D39 Gas \\u4F53\\u9A8C\\u3002\\n\\u4EA4\\u6613\\u54C8\\u5E0C: \".concat(result.hash));setShowTaskModal(false);console.log('Gas Session 开启成功，交易哈希:',result.hash);}else{throw new Error('Gas Session 开启失败');}}catch(error){console.error('开启 Session 失败:',error);setError(error.message||'开启 Session 失败');}};// 真实 NFT 铸造\nconst mintNFT=async()=>{if(!signer||!userAddress){setError('请先连接钱包');return;}setIsMinting(true);setError('');try{console.log('开始铸造 NFT...');// 检查是否有免费 Gas（基于任务完成和 Session 状态）\nconst gasSponsored=sessionActive&&checkTaskCompletion();// 调用真实的合约函数\nconst result=await mintNFTDirect(userAddress,signer,gasSponsored);// 添加铸造记录\nconst newMint={timestamp:Date.now(),hash:result.hash,gasSponsored:result.gasSponsored};setMintHistory(prev=>[newMint,...prev]);setMintCount(prev=>prev+1);// 更新 NFT 余额\ntry{const newBalance=await getNFTBalance(userAddress);setNftBalance(newBalance);// 重新检查资格\nconst eligible=await checkEligibility(userAddress);setIsEligible(eligible);}catch(error){console.error('更新余额失败:',error);}if(result.gasSponsored){setSuccess(\"\\uD83C\\uDF89 NFT \\u94F8\\u9020\\u6210\\u529F\\uFF01Gas \\u5DF2\\u7531 GasMorph \\u8D5E\\u52A9\\uFF01\\n\\u4EA4\\u6613\\u54C8\\u5E0C: \".concat(result.hash));}else{setSuccess(\"\\uD83C\\uDF89 NFT \\u94F8\\u9020\\u6210\\u529F\\uFF01\\u60A8\\u652F\\u4ED8\\u4E86 Gas \\u8D39\\u7528\\u3002\\n\\u4EA4\\u6613\\u54C8\\u5E0C: \".concat(result.hash));}console.log('NFT 铸造成功，哈希:',result.hash,'Gas赞助:',result.gasSponsored);// 3秒后清除成功消息\nsetTimeout(()=>setSuccess(''),3000);}catch(error){console.error('铸造 NFT 失败:',error);setError(error.message||'铸造 NFT 失败');}finally{setIsMinting(false);}};// 计算剩余时间和定期刷新状态\nuseEffect(()=>{if(sessionActive&&sessionEndTime>0){const interval=setInterval(()=>{const now=Math.floor(Date.now()/1000);const remaining=sessionEndTime-now;if(remaining<=0){setSessionActive(false);setSessionEndTime(0);setRemainingTime('');setError('Gas Session 已过期');}else{const minutes=Math.floor(remaining/60);const seconds=remaining%60;setRemainingTime(\"\".concat(minutes,\":\").concat(seconds.toString().padStart(2,'0')));}},1000);return()=>clearInterval(interval);}},[sessionActive,sessionEndTime]);// 定期刷新用户状态（每30秒）\nuseEffect(()=>{if(isConnected&&userAddress){const refreshInterval=setInterval(async()=>{try{// 刷新 NFT 余额\nconst balance=await getNFTBalance(userAddress);setNftBalance(balance);// 刷新资格状态\nconst eligible=await checkEligibility(userAddress);setIsEligible(eligible);// 刷新 Gas Session 状态\nconst sessionStatus=await getSessionStatus(userAddress);if(sessionStatus.isActive&&!sessionActive){setSessionActive(true);setSessionEndTime(sessionStatus.expiryTime);}else if(!sessionStatus.isActive&&sessionActive){setSessionActive(false);setSessionEndTime(0);setRemainingTime('');}}catch(error){console.error('刷新用户状态失败:',error);}},30000);// 30秒刷新一次\nreturn()=>clearInterval(refreshInterval);}},[isConnected,userAddress,sessionActive]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"logo\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u26FD GasMorph\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u610F\\u56FE\\u9A71\\u52A8\\u7684 Gas \\u8865\\u8D34\\u534F\\u8BAE\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"network-info\",children:/*#__PURE__*/_jsx(\"span\",{className:\"network-badge\",children:\"Hardhat Local\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"app-container\",children:!isConnected?/*#__PURE__*/_jsx(\"div\",{className:\"welcome-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDE80 \\u6B22\\u8FCE\\u4F7F\\u7528 GasMorph\"}),/*#__PURE__*/_jsx(\"p\",{children:\"GasMorph \\u662F\\u4E00\\u4E2A\\u521B\\u65B0\\u7684\\u610F\\u56FE\\u9A71\\u52A8 Gas \\u8865\\u8D34\\u534F\\u8BAE\\uFF0C\\u65E8\\u5728\\u5C06 DApp \\u7684 Gas \\u652F\\u51FA \\u4ECE\\u6210\\u672C\\u8F6C\\u53D8\\u4E3A\\u53EF\\u91CF\\u5316\\u7684\\u589E\\u957F\\u6295\\u8D44\\u3002\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"demo-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFAF Demo \\u529F\\u80FD\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u52A8\\u6001\\u89C4\\u5219 Demo:\"}),\" \\u6301\\u6709\\u7279\\u5B9A NFT \\u7684\\u5730\\u5740\\u4EAB\\u53D7 Gas \\u5168\\u514D\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4EFB\\u52A1\\u5B8C\\u6210 Demo:\"}),\" \\u5B8C\\u6210\\u4EFB\\u52A1\\u540E\\u83B7\\u5F97\\u514D\\u8D39 Gas \\u4F53\\u9A8C\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConnect,className:\"connect-btn\",children:\"\\u8FDE\\u63A5\\u94B1\\u5305\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDC64 \\u7528\\u6237\\u4FE1\\u606F\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5730\\u5740:\"}),\" \",userAddress]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"NFT \\u4F59\\u989D:\"}),\" \",nftBalance,\" \\u4E2A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u8D44\\u683C\\u72B6\\u6001:\"}),isEligible?/*#__PURE__*/_jsx(\"span\",{className:\"eligible\",children:\"\\u2705 \\u7B26\\u5408 Gas \\u8865\\u8D34\\u6761\\u4EF6 (\\u6301\\u6709 NFT)\"}):/*#__PURE__*/_jsx(\"span\",{className:\"not-eligible\",children:\"\\u274C \\u4E0D\\u7B26\\u5408\\u6761\\u4EF6 (\\u65E0 NFT)\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4EFB\\u52A1\\u5B8C\\u6210:\"}),\" \",completedTasks.length,\"/3\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDisconnect,className:\"disconnect-btn\",children:\"\\u65AD\\u5F00\\u8FDE\\u63A5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"session-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u23F0 Gas Session \\u7BA1\\u7406\"}),!sessionActive?/*#__PURE__*/_jsxs(\"div\",{className:\"session-inactive\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u5F53\\u524D\\u6CA1\\u6709\\u6D3B\\u8DC3\\u7684 Gas Session\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-progress\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4EFB\\u52A1\\u8FDB\\u5EA6:\"}),\" \",completedTasks.length,\"/3 \\u5B8C\\u6210\"]}),completedTasks.length<2&&/*#__PURE__*/_jsx(\"p\",{className:\"task-requirement\",children:\"\\u26A0\\uFE0F \\u9700\\u8981\\u5B8C\\u6210\\u81F3\\u5C112\\u4E2A\\u4EFB\\u52A1\\u624D\\u80FD\\u5F00\\u542F Session\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"session-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:showTasks,className:\"show-tasks-btn\",children:\"\\uD83D\\uDCCB \\u67E5\\u770B\\u4EFB\\u52A1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startGasSession,disabled:!checkTaskCompletion(),className:\"start-session-btn\",children:\"\\u5F00\\u542F 2 \\u5206\\u949F\\u514D Gas \\u4F53\\u9A8C\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"session-active\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"session-status\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-indicator active\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Session \\u6D3B\\u8DC3\\u4E2D\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5269\\u4F59\\u65F6\\u95F4:\"}),\" \",remainingTime]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u7ED3\\u675F\\u65F6\\u95F4:\"}),\" \",new Date(sessionEndTime*1000).toLocaleString()]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mint-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFA8 NFT \\u94F8\\u9020 Demo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mint-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u94F8\\u9020\\u6B21\\u6570:\"}),\" \",mintCount]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Gas \\u72B6\\u6001:\"}),sessionActive&&checkTaskCompletion()?/*#__PURE__*/_jsx(\"span\",{className:\"mint-available\",children:\"\\uD83D\\uDFE2 \\u514D\\u8D39\\u94F8\\u9020 (Gas \\u5DF2\\u8D5E\\u52A9)\"}):/*#__PURE__*/_jsx(\"span\",{className:\"mint-unavailable\",children:\"\\uD83D\\uDD34 \\u9700\\u8981\\u652F\\u4ED8 Gas \\u8D39\\u7528\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:mintNFT,disabled:isMinting,className:\"mint-btn\",children:isMinting?'铸造中...':'🎨 Mint NFT'}),mintCount>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mint-history\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u94F8\\u9020\\u5386\\u53F2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"history-list\",children:mintHistory.slice(0,5).map((mint,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"history-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:new Date(mint.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsxs(\"span\",{className:\"hash\",children:[mint.hash.slice(0,10),\"...\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"status \".concat(mint.gasSponsored?'sponsored':'paid'),children:mint.gasSponsored?'✅ 免费':'💰 付费'})]},index))})]})]}),showTaskModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"task-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB \\u5B8C\\u6210\\u4EFB\\u52A1\\u83B7\\u5F97\\u514D\\u8D39 Gas\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowTaskModal(false),className:\"close-btn\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"task-description\",children:\"\\u5B8C\\u6210\\u4EE5\\u4E0B\\u4EFB\\u52A1\\u4E2D\\u7684\\u81F3\\u5C112\\u4E2A\\uFF0C\\u5373\\u53EF\\u83B7\\u5F972\\u5206\\u949F\\u514D\\u8D39 Gas \\u4F53\\u9A8C\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tasks-list\",children:tasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-item \".concat(completedTasks.includes(task.id)?'completed':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:task.title}),/*#__PURE__*/_jsx(\"p\",{children:task.description})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>completeTask(task.id),disabled:completedTasks.includes(task.id),className:\"task-btn \".concat(completedTasks.includes(task.id)?'completed':''),children:completedTasks.includes(task.id)?'✅ 已完成':'完成'})]},task.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"task-progress-text\",children:[\"\\u5DF2\\u5B8C\\u6210: \",completedTasks.length,\"/3 \\u4EFB\\u52A1\"]}),checkTaskCompletion()&&/*#__PURE__*/_jsx(\"button\",{onClick:startGasSession,className:\"start-session-btn\",children:\"\\u5F00\\u542F Gas Session\"})]})]})]})}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"message error\",children:[\"\\u274C \",error]}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"message success\",children:[\"\\u2705 \",success]})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","ethers","mintNFTDirect","startGasSession","startRealGasSession","getSessionStatus","getNFTBalance","jsx","_jsx","jsxs","_jsxs","ELIGIBLE_ADDRESSES","TASKS","id","title","description","type","completed","App","isConnected","setIsConnected","userAddress","setUserAddress","setProvider","signer","setSigner","sessionActive","setSessionActive","sessionEndTime","setSessionEndTime","remainingTime","setRemainingTime","mintCount","setMintCount","isMinting","setIsMinting","mintHistory","setMintHistory","error","setError","success","setSuccess","showTaskModal","setShowTaskModal","tasks","completedTasks","setCompletedTasks","isEligible","setIsEligible","nftBalance","setNftBalance","checkEligibility","address","console","includes","toLowerCase","checkTaskCompletion","length","handleConnect","window","ethereum","log","accounts","request","method","prov","BrowserProvider","signerInstance","getSigner","network","getNetwork","chainId","Number","concat","eligible","balance","sessionStatus","isActive","expiryTime","code","message","handleDisconnect","showTasks","completeTask","taskId","_tasks$find","prev","find","t","result","hash","endTime","Math","floor","Date","now","Error","mintNFT","gasSponsored","newMint","timestamp","newBalance","setTimeout","interval","setInterval","remaining","minutes","seconds","toString","padStart","clearInterval","refreshInterval","className","children","onClick","disabled","toLocaleString","slice","map","mint","index","toLocaleTimeString","task"],"sources":["/Users/fhy/project/gasmorph/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { mintNFTDirect, startGasSession as startRealGasSession, getSessionStatus, getNFTBalance } from './utils/erc4337';\nimport './App.css';\n\n// 硬编码的规则：持有特定 NFT 的地址\nconst ELIGIBLE_ADDRESSES = [\n  '0x742d35Cc6634C0532925a3b8D4C9db96C4b4d8b6', // 示例地址\n  '0x1234567890123456789012345678901234567890', // 示例地址\n];\n\n// 移除了未使用的 DEMO_NFT_ADDRESS 常量\n\n// 任务配置\nconst TASKS = [\n  {\n    id: 1,\n    title: '关注 GasMorph 官方推特',\n    description: '关注 @GasMorph 官方推特账号',\n    type: 'social',\n    completed: false\n  },\n  {\n    id: 2,\n    title: '加入 Discord 社区',\n    description: '加入 GasMorph Discord 服务器',\n    type: 'social',\n    completed: false\n  },\n  {\n    id: 3,\n    title: '分享项目介绍',\n    description: '在社交媒体分享 GasMorph 项目介绍',\n    type: 'social',\n    completed: false\n  }\n];\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [userAddress, setUserAddress] = useState<string>('');\n  const [, setProvider] = useState<ethers.BrowserProvider | null>(null);\n  const [signer, setSigner] = useState<ethers.Signer | null>(null);\n  const [sessionActive, setSessionActive] = useState(false);\n  const [sessionEndTime, setSessionEndTime] = useState<number>(0);\n  const [remainingTime, setRemainingTime] = useState<string>('');\n  const [mintCount, setMintCount] = useState(0);\n  const [isMinting, setIsMinting] = useState(false);\n  const [mintHistory, setMintHistory] = useState<Array<{timestamp: number, hash: string, gasSponsored: boolean}>>([]);\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [showTaskModal, setShowTaskModal] = useState(false);\n  const [tasks] = useState(TASKS);\n  const [completedTasks, setCompletedTasks] = useState<number[]>([]);\n  const [isEligible, setIsEligible] = useState<boolean>(false);\n  const [nftBalance, setNftBalance] = useState<number>(0);\n\n  // 检查用户是否有资格享受 Gas 补贴（基于 NFT 持有）\n  const checkEligibility = async (address: string): Promise<boolean> => {\n    try {\n      const nftBalance = await getNFTBalance(address);\n      return nftBalance > 0; // 持有 NFT 即有资格\n    } catch (error) {\n      console.error('检查资格失败:', error);\n      return ELIGIBLE_ADDRESSES.includes(address.toLowerCase()); // 降级到硬编码检查\n    }\n  };\n\n  // 检查任务完成状态\n  const checkTaskCompletion = (): boolean => {\n    return completedTasks.length >= 2; // 至少完成2个任务\n  };\n\n  // 连接钱包\n  const handleConnect = async () => {\n    setError('');\n    setSuccess('');\n    \n    if (typeof window !== 'undefined' && (window as any).ethereum) {\n      try {\n        console.log('正在连接钱包...');\n        const accounts = await (window as any).ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n        \n        if (accounts.length > 0) {\n          const address = accounts[0];\n          console.log('钱包地址:', address);\n          \n          const prov = new ethers.BrowserProvider((window as any).ethereum);\n          const signerInstance = await prov.getSigner();\n          \n          // 检查网络\n          const network = await prov.getNetwork();\n          console.log('当前网络 Chain ID:', network.chainId);\n          \n          // 将 BigInt 转换为 Number 进行比较\n          const chainId = Number(network.chainId);\n          if (chainId !== 1337) {\n            setError(`⚠️ 请切换到 Hardhat 本地网络 (Chain ID: 1337)，当前: ${chainId}`);\n            return;\n          }\n          \n          setUserAddress(address);\n          setProvider(prov);\n          setSigner(signerInstance);\n          setIsConnected(true);\n          \n          // 检查用户资格和 NFT 余额\n          try {\n            const eligible = await checkEligibility(address);\n            const balance = await getNFTBalance(address);\n            setIsEligible(eligible);\n            setNftBalance(balance);\n            \n            // 检查当前 Gas Session 状态\n            const sessionStatus = await getSessionStatus(address);\n            if (sessionStatus.isActive) {\n              setSessionActive(true);\n              setSessionEndTime(sessionStatus.expiryTime);\n            }\n            \n            setSuccess(`✅ 钱包连接成功！${eligible ? ' 您持有 NFT，享受 Gas 补贴资格！' : ''}`);\n          } catch (error) {\n            console.error('检查用户状态失败:', error);\n            setSuccess('钱包连接成功！');\n          }\n          \n          console.log('钱包连接成功');\n        }\n      } catch (error: any) {\n        console.error('连接钱包失败:', error);\n        \n        if (error.code === 4001) {\n          setError('用户拒绝了连接请求，请重新尝试连接钱包');\n        } else if (error.code === -32002) {\n          setError('MetaMask 已经在处理连接请求，请检查 MetaMask 窗口');\n        } else {\n          setError(error.message || '连接钱包失败');\n        }\n      }\n    } else {\n      setError('请安装 MetaMask 钱包');\n    }\n  };\n\n  // 断开连接\n  const handleDisconnect = () => {\n    setIsConnected(false);\n    setUserAddress('');\n    setProvider(null);\n    setSigner(null);\n    setSessionActive(false);\n    setSessionEndTime(0);\n    setRemainingTime('');\n    setMintCount(0);\n    setMintHistory([]);\n    setError('');\n    setSuccess('');\n    setShowTaskModal(false);\n    setCompletedTasks([]);\n    setIsEligible(false);\n    setNftBalance(0);\n  };\n\n  // 显示任务模态框\n  const showTasks = () => {\n    setShowTaskModal(true);\n  };\n\n  // 完成任务\n  const completeTask = (taskId: number) => {\n    if (!completedTasks.includes(taskId)) {\n      setCompletedTasks(prev => [...prev, taskId]);\n      setSuccess(`✅ 任务\"${tasks.find(t => t.id === taskId)?.title}\"已完成！`);\n      \n      // 检查是否满足开启 Session 的条件\n      if (completedTasks.length + 1 >= 2) {\n        setSuccess('🎉 恭喜！您已完成足够任务，现在可以开启 Gas Session！');\n      }\n    }\n  };\n\n  // 开启 Gas Session\n  const startGasSession = async () => {\n    if (!signer || !userAddress) {\n      setError('请先连接钱包');\n      return;\n    }\n\n    if (!checkTaskCompletion()) {\n      setError('请先完成至少2个任务才能开启 Gas Session');\n      return;\n    }\n\n    setError('');\n    setSuccess('');\n    \n    try {\n      console.log('开启 Gas Session...');\n      \n      // 调用真实的合约函数\n      const result = await startRealGasSession(userAddress, 120, signer); // 2分钟\n      \n      if (result && result.hash) {\n        const endTime = Math.floor(Date.now() / 1000) + 120;\n        setSessionActive(true);\n        setSessionEndTime(endTime);\n        setSuccess(`✅ Gas Session 已开启！您现在有 2 分钟的免费 Gas 体验。\\n交易哈希: ${result.hash}`);\n        setShowTaskModal(false);\n        \n        console.log('Gas Session 开启成功，交易哈希:', result.hash);\n      } else {\n        throw new Error('Gas Session 开启失败');\n      }\n    } catch (error: any) {\n      console.error('开启 Session 失败:', error);\n      setError(error.message || '开启 Session 失败');\n    }\n  };\n\n  // 真实 NFT 铸造\n  const mintNFT = async () => {\n    if (!signer || !userAddress) {\n      setError('请先连接钱包');\n      return;\n    }\n\n    setIsMinting(true);\n    setError('');\n    \n    try {\n      console.log('开始铸造 NFT...');\n      \n      // 检查是否有免费 Gas（基于任务完成和 Session 状态）\n      const gasSponsored = sessionActive && checkTaskCompletion();\n      \n      // 调用真实的合约函数\n      const result = await mintNFTDirect(userAddress, signer, gasSponsored);\n      \n      // 添加铸造记录\n      const newMint = {\n        timestamp: Date.now(),\n        hash: result.hash,\n        gasSponsored: result.gasSponsored\n      };\n      \n      setMintHistory(prev => [newMint, ...prev]);\n      setMintCount(prev => prev + 1);\n      \n      // 更新 NFT 余额\n      try {\n        const newBalance = await getNFTBalance(userAddress);\n        setNftBalance(newBalance);\n        \n        // 重新检查资格\n        const eligible = await checkEligibility(userAddress);\n        setIsEligible(eligible);\n      } catch (error) {\n        console.error('更新余额失败:', error);\n      }\n      \n      if (result.gasSponsored) {\n        setSuccess(`🎉 NFT 铸造成功！Gas 已由 GasMorph 赞助！\\n交易哈希: ${result.hash}`);\n      } else {\n        setSuccess(`🎉 NFT 铸造成功！您支付了 Gas 费用。\\n交易哈希: ${result.hash}`);\n      }\n      \n      console.log('NFT 铸造成功，哈希:', result.hash, 'Gas赞助:', result.gasSponsored);\n      \n      // 3秒后清除成功消息\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (error: any) {\n      console.error('铸造 NFT 失败:', error);\n      setError(error.message || '铸造 NFT 失败');\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  // 计算剩余时间和定期刷新状态\n  useEffect(() => {\n    if (sessionActive && sessionEndTime > 0) {\n      const interval = setInterval(() => {\n        const now = Math.floor(Date.now() / 1000);\n        const remaining = sessionEndTime - now;\n        \n        if (remaining <= 0) {\n          setSessionActive(false);\n          setSessionEndTime(0);\n          setRemainingTime('');\n          setError('Gas Session 已过期');\n        } else {\n          const minutes = Math.floor(remaining / 60);\n          const seconds = remaining % 60;\n          setRemainingTime(`${minutes}:${seconds.toString().padStart(2, '0')}`);\n        }\n      }, 1000);\n      \n      return () => clearInterval(interval);\n    }\n  }, [sessionActive, sessionEndTime]);\n\n  // 定期刷新用户状态（每30秒）\n  useEffect(() => {\n    if (isConnected && userAddress) {\n      const refreshInterval = setInterval(async () => {\n        try {\n          // 刷新 NFT 余额\n          const balance = await getNFTBalance(userAddress);\n          setNftBalance(balance);\n          \n          // 刷新资格状态\n          const eligible = await checkEligibility(userAddress);\n          setIsEligible(eligible);\n          \n          // 刷新 Gas Session 状态\n          const sessionStatus = await getSessionStatus(userAddress);\n          if (sessionStatus.isActive && !sessionActive) {\n            setSessionActive(true);\n            setSessionEndTime(sessionStatus.expiryTime);\n          } else if (!sessionStatus.isActive && sessionActive) {\n            setSessionActive(false);\n            setSessionEndTime(0);\n            setRemainingTime('');\n          }\n        } catch (error) {\n          console.error('刷新用户状态失败:', error);\n        }\n      }, 30000); // 30秒刷新一次\n      \n      return () => clearInterval(refreshInterval);\n    }\n  }, [isConnected, userAddress, sessionActive]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-header\">\n        <div className=\"logo\">\n          <h1>⛽ GasMorph</h1>\n          <p>意图驱动的 Gas 补贴协议</p>\n        </div>\n        <div className=\"network-info\">\n          <span className=\"network-badge\">Hardhat Local</span>\n        </div>\n      </div>\n\n      <div className=\"app-container\">\n        {!isConnected ? (\n          <div className=\"welcome-section\">\n            <div className=\"welcome-card\">\n              <h2>🚀 欢迎使用 GasMorph</h2>\n              <p>\n                GasMorph 是一个创新的意图驱动 Gas 补贴协议，旨在将 DApp 的 Gas 支出\n                从成本转变为可量化的增长投资。\n              </p>\n              <div className=\"demo-info\">\n                <h3>🎯 Demo 功能</h3>\n                <ul>\n                  <li><strong>动态规则 Demo:</strong> 持有特定 NFT 的地址享受 Gas 全免</li>\n                  <li><strong>任务完成 Demo:</strong> 完成任务后获得免费 Gas 体验</li>\n                </ul>\n              </div>\n              <button onClick={handleConnect} className=\"connect-btn\">\n                连接钱包\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"main-content\">\n            {/* 用户信息 */}\n            <div className=\"user-info\">\n              <h3>👤 用户信息</h3>\n              <p><strong>地址:</strong> {userAddress}</p>\n              <p><strong>NFT 余额:</strong> {nftBalance} 个</p>\n              <p><strong>资格状态:</strong> \n                {isEligible ? \n                  <span className=\"eligible\">✅ 符合 Gas 补贴条件 (持有 NFT)</span> : \n                  <span className=\"not-eligible\">❌ 不符合条件 (无 NFT)</span>\n                }\n              </p>\n              <p><strong>任务完成:</strong> {completedTasks.length}/3</p>\n              <button onClick={handleDisconnect} className=\"disconnect-btn\">\n                断开连接\n              </button>\n            </div>\n\n            {/* Gas Session 管理 */}\n            <div className=\"session-section\">\n              <h3>⏰ Gas Session 管理</h3>\n              {!sessionActive ? (\n                <div className=\"session-inactive\">\n                  <p>当前没有活跃的 Gas Session</p>\n                  <div className=\"task-progress\">\n                    <p><strong>任务进度:</strong> {completedTasks.length}/3 完成</p>\n                    {completedTasks.length < 2 && (\n                      <p className=\"task-requirement\">⚠️ 需要完成至少2个任务才能开启 Session</p>\n                    )}\n                  </div>\n                  <div className=\"session-buttons\">\n                    <button onClick={showTasks} className=\"show-tasks-btn\">\n                      📋 查看任务\n                    </button>\n                    <button \n                      onClick={startGasSession} \n                      disabled={!checkTaskCompletion()}\n                      className=\"start-session-btn\"\n                    >\n                      开启 2 分钟免 Gas 体验\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"session-active\">\n                  <div className=\"session-status\">\n                    <span className=\"status-indicator active\"></span>\n                    <span>Session 活跃中</span>\n                  </div>\n                  <p><strong>剩余时间:</strong> {remainingTime}</p>\n                  <p><strong>结束时间:</strong> {new Date(sessionEndTime * 1000).toLocaleString()}</p>\n                </div>\n              )}\n            </div>\n\n            {/* NFT 铸造区域 */}\n            <div className=\"mint-section\">\n              <h3>🎨 NFT 铸造 Demo</h3>\n              <div className=\"mint-info\">\n                <p><strong>铸造次数:</strong> {mintCount}</p>\n                <p><strong>Gas 状态:</strong> \n                  {sessionActive && checkTaskCompletion() ? \n                    <span className=\"mint-available\">🟢 免费铸造 (Gas 已赞助)</span> : \n                    <span className=\"mint-unavailable\">🔴 需要支付 Gas 费用</span>\n                  }\n                </p>\n              </div>\n              \n              <button \n                onClick={mintNFT}\n                disabled={isMinting}\n                className=\"mint-btn\"\n              >\n                {isMinting ? '铸造中...' : '🎨 Mint NFT'}\n              </button>\n              \n              {mintCount > 0 && (\n                <div className=\"mint-history\">\n                  <h4>铸造历史</h4>\n                  <div className=\"history-list\">\n                    {mintHistory.slice(0, 5).map((mint, index) => (\n                      <div key={index} className=\"history-item\">\n                        <span>{new Date(mint.timestamp).toLocaleTimeString()}</span>\n                        <span className=\"hash\">{mint.hash.slice(0, 10)}...</span>\n                        <span className={`status ${mint.gasSponsored ? 'sponsored' : 'paid'}`}>\n                          {mint.gasSponsored ? '✅ 免费' : '💰 付费'}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* 任务模态框 */}\n            {showTaskModal && (\n              <div className=\"modal-overlay\">\n                <div className=\"task-modal\">\n                  <div className=\"modal-header\">\n                    <h3>📋 完成任务获得免费 Gas</h3>\n                    <button onClick={() => setShowTaskModal(false)} className=\"close-btn\">×</button>\n                  </div>\n                  <div className=\"modal-content\">\n                    <p className=\"task-description\">\n                      完成以下任务中的至少2个，即可获得2分钟免费 Gas 体验：\n                    </p>\n                    <div className=\"tasks-list\">\n                      {tasks.map(task => (\n                        <div key={task.id} className={`task-item ${completedTasks.includes(task.id) ? 'completed' : ''}`}>\n                          <div className=\"task-info\">\n                            <h4>{task.title}</h4>\n                            <p>{task.description}</p>\n                          </div>\n                          <button\n                            onClick={() => completeTask(task.id)}\n                            disabled={completedTasks.includes(task.id)}\n                            className={`task-btn ${completedTasks.includes(task.id) ? 'completed' : ''}`}\n                          >\n                            {completedTasks.includes(task.id) ? '✅ 已完成' : '完成'}\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"modal-footer\">\n                      <p className=\"task-progress-text\">\n                        已完成: {completedTasks.length}/3 任务\n                      </p>\n                      {checkTaskCompletion() && (\n                        <button onClick={startGasSession} className=\"start-session-btn\">\n                          开启 Gas Session\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 错误和成功消息 */}\n            {error && (\n              <div className=\"message error\">\n                ❌ {error}\n              </div>\n            )}\n            {success && (\n              <div className=\"message success\">\n                ✅ {success}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}