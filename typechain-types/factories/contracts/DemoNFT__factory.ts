/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DemoNFT, DemoNFTInterface } from "../../contracts/DemoNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintForFree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405266038d7ea4c680006008556103e86009553480156200002257600080fd5b50604051620016b9380380620016b9833981016040819052620000459162000145565b806040518060400160405280601181526020017011d85cd35bdc9c1a0811195b5bc8139195607a1b8152506040518060400160405280600581526020016411d353919560da1b81525081600090816200009f91906200021c565b506001620000ae82826200021c565b5050506001600160a01b038116620000e057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000eb81620000f3565b5050620002e8565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200015857600080fd5b81516001600160a01b03811681146200017057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b0381111562000238576200023862000177565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113c180620002f86000396000f3fe6080604052600436106101405760003560e01c806370a08231116100b6578063c87b56dd1161006f578063c87b56dd1461035b578063d5abeb011461037b578063e985e9c514610391578063eaccbf6f146103b1578063f2fde38b146103d1578063f4a0a528146103f157600080fd5b806370a08231146102b3578063715018a6146102d35780638da5cb5b146102e857806395d89b4114610306578063a22cb4651461031b578063b88d4fde1461033b57600080fd5b806323b872dd1161010857806323b872dd146102155780633ccfd60b1461023557806342842e0e1461024a5780636352211e1461026a5780636817c76c1461028a5780636a627842146102a057600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101d457806318160ddd146101f6575b600080fd5b34801561015157600080fd5b5061016561016036600461100a565b610411565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f610463565b6040516101719190611077565b3480156101a857600080fd5b506101bc6101b736600461108a565b6104f5565b6040516001600160a01b039091168152602001610171565b3480156101e057600080fd5b506101f46101ef3660046110bf565b61051e565b005b34801561020257600080fd5b506007545b604051908152602001610171565b34801561022157600080fd5b506101f46102303660046110e9565b61052d565b34801561024157600080fd5b506101f46105bd565b34801561025657600080fd5b506101f46102653660046110e9565b610601565b34801561027657600080fd5b506101bc61028536600461108a565b610621565b34801561029657600080fd5b5061020760085481565b6101f46102ae366004611125565b61062c565b3480156102bf57600080fd5b506102076102ce366004611125565b610719565b3480156102df57600080fd5b506101f4610761565b3480156102f457600080fd5b506006546001600160a01b03166101bc565b34801561031257600080fd5b5061018f610775565b34801561032757600080fd5b506101f4610336366004611140565b610784565b34801561034757600080fd5b506101f4610356366004611192565b61078f565b34801561036757600080fd5b5061018f61037636600461108a565b6107a7565b34801561038757600080fd5b5061020760095481565b34801561039d57600080fd5b506101656103ac36600461126e565b61081c565b3480156103bd57600080fd5b506101f46103cc366004611125565b61084a565b3480156103dd57600080fd5b506101f46103ec366004611125565b610852565b3480156103fd57600080fd5b506101f461040c36600461108a565b61088d565b60006001600160e01b031982166380ac58cd60e01b148061044257506001600160e01b03198216635b5e139f60e01b145b8061045d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610472906112a1565b80601f016020809104026020016040519081016040528092919081815260200182805461049e906112a1565b80156104eb5780601f106104c0576101008083540402835291602001916104eb565b820191906000526020600020905b8154815290600101906020018083116104ce57829003601f168201915b5050505050905090565b60006105008261089a565b506000828152600460205260409020546001600160a01b031661045d565b6105298282336108d3565b5050565b6001600160a01b03821661055c57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006105698383336108e0565b9050836001600160a01b0316816001600160a01b0316146105b7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610553565b50505050565b6105c56109d9565b6006546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156105fe573d6000803e3d6000fd5b50565b61061c8383836040518060200160405280600081525061078f565b505050565b600061045d8261089a565b6008543410156106755760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610553565b600954600754106106bd5760405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b6044820152606401610553565b600780549060006106cd836112db565b90915550506007546106df8282610a06565b60405181906001600160a01b038416907f4cc0a9c4a99ddc700de1af2c9f916a7cbfdb71f14801ccff94061ad1ef8a804090600090a35050565b60006001600160a01b038216610745576040516322718ad960e21b815260006004820152602401610553565b506001600160a01b031660009081526003602052604090205490565b6107696109d9565b6107736000610a20565b565b606060018054610472906112a1565b610529338383610a72565b61079a84848461052d565b6105b73385858585610b11565b60606107b28261089a565b5060006107ca60408051602081019091526000815290565b905060008151116107ea5760405180602001604052806000815250610815565b806107f484610c3c565b604051602001610805929190611302565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6106756109d9565b61085a6109d9565b6001600160a01b03811661088457604051631e4fbdf760e01b815260006004820152602401610553565b6105fe81610a20565b6108956109d9565b600855565b6000818152600260205260408120546001600160a01b03168061045d57604051637e27328960e01b815260048101849052602401610553565b61061c8383836001610ccf565b6000828152600260205260408120546001600160a01b039081169083161561090d5761090d818486610dd5565b6001600160a01b0381161561094b5761092a600085600080610ccf565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561097a576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146107735760405163118cdaa760e01b8152336004820152602401610553565b610529828260405180602001604052806000815250610e39565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610aa457604051630b61174360e31b81526001600160a01b0383166004820152602401610553565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610c3557604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610b53908890889087908790600401611331565b6020604051808303816000875af1925050508015610b8e575060408051601f3d908101601f19168201909252610b8b9181019061136e565b60015b610bf7573d808015610bbc576040519150601f19603f3d011682016040523d82523d6000602084013e610bc1565b606091505b508051600003610bef57604051633250574960e11b81526001600160a01b0385166004820152602401610553565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610c3357604051633250574960e11b81526001600160a01b0385166004820152602401610553565b505b5050505050565b60606000610c4983610e51565b600101905060008167ffffffffffffffff811115610c6957610c6961117c565b6040519080825280601f01601f191660200182016040528015610c93576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c9d57509392505050565b8080610ce357506001600160a01b03821615155b15610da5576000610cf38461089a565b90506001600160a01b03831615801590610d1f5750826001600160a01b0316816001600160a01b031614155b8015610d325750610d30818461081c565b155b15610d5b5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610553565b8115610da35783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610de0838383610f29565b61061c576001600160a01b038316610e0e57604051637e27328960e01b815260048101829052602401610553565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610553565b610e438383610f8f565b61061c336000858585610b11565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e905772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ebc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610eda57662386f26fc10000830492506010015b6305f5e1008310610ef2576305f5e100830492506008015b6127108310610f0657612710830492506004015b60648310610f18576064830492506002015b600a831061045d5760010192915050565b60006001600160a01b03831615801590610f875750826001600160a01b0316846001600160a01b03161480610f635750610f63848461081c565b80610f8757506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610fb957604051633250574960e11b815260006004820152602401610553565b6000610fc7838360006108e0565b90506001600160a01b0381161561061c576040516339e3563760e11b815260006004820152602401610553565b6001600160e01b0319811681146105fe57600080fd5b60006020828403121561101c57600080fd5b813561081581610ff4565b60005b8381101561104257818101518382015260200161102a565b50506000910152565b60008151808452611063816020860160208601611027565b601f01601f19169290920160200192915050565b602081526000610815602083018461104b565b60006020828403121561109c57600080fd5b5035919050565b80356001600160a01b03811681146110ba57600080fd5b919050565b600080604083850312156110d257600080fd5b6110db836110a3565b946020939093013593505050565b6000806000606084860312156110fe57600080fd5b611107846110a3565b9250611115602085016110a3565b9150604084013590509250925092565b60006020828403121561113757600080fd5b610815826110a3565b6000806040838503121561115357600080fd5b61115c836110a3565b91506020830135801515811461117157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156111a857600080fd5b6111b1856110a3565b93506111bf602086016110a3565b925060408501359150606085013567ffffffffffffffff808211156111e357600080fd5b818701915087601f8301126111f757600080fd5b8135818111156112095761120961117c565b604051601f8201601f19908116603f011681019083821181831017156112315761123161117c565b816040528281528a602084870101111561124a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561128157600080fd5b61128a836110a3565b9150611298602084016110a3565b90509250929050565b600181811c908216806112b557607f821691505b6020821081036112d557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016112fb57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351611314818460208801611027565b835190830190611328818360208801611027565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113649083018461104b565b9695505050505050565b60006020828403121561138057600080fd5b815161081581610ff456fea2646970667358221220355f02c1277b324e58591a23c6a66ce4061fd8ebbfd916b3f96f99ed3090c8bd64736f6c63430008140033";

type DemoNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoNFT__factory extends ContractFactory {
  constructor(...args: DemoNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      DemoNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DemoNFT__factory {
    return super.connect(runner) as DemoNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoNFTInterface {
    return new Interface(_abi) as DemoNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DemoNFT {
    return new Contract(address, _abi, runner) as unknown as DemoNFT;
  }
}
